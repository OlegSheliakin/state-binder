apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = rootProject.ext.publishedGroupId
version = rootProject.ext.libraryVersion

install {
    repositories.mavenInstaller {
        pom {
            project {
                groupId rootProject.ext.publishedGroupId
                artifactId artifact

                name rootProject.ext.libraryName
                description libraryDescription
                url rootProject.ext.siteUrl

                licenses {
                    license {
                        name rootProject.ext.licenseName
                        url rootProject.ext.licenseUrl
                    }
                }
                developers {
                    developer {
                        id rootProject.ext.developerId
                        name rootProject.ext.developerName
                        email rootProject.ext.developerEmail
                    }
                }
                scm {
                    connection rootProject.ext.gitUrl
                    developerConnection rootProject.ext.gitUrl
                    url rootProject.ext.siteUrl
                }
            }

            withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")

    configurations = ['archives']
    pkg {
        repo = rootProject.ext.bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = rootProject.ext.siteUrl
        issueTrackerUrl = rootProject.ext.issuesUrl
        vcsUrl = rootProject.ext.gitUrl
        licenses = rootProject.ext.allLicenses
        labels = rootProject.ext.tags
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}